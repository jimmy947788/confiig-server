version: "3.5"

volumes:
  rabbitmq-data:

services:
  config-server:
    image: config-server
    build:
      context: ./app
      dockerfile: Dockerfile
      target: runner
    container_name: config-server.srv
    hostname: config-server.srv
    ports:
      - 8010:8000
    environment:
      APP_NAME: "config-server"
    env_file: ./config/default.env
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:8-oracle
    container_name: mysql.srv
    hostname: mysql.srv
    ports:
      - 3306:3306
    volumes:
      - ./mysql/initdb:/docker-entrypoint-initdb.d
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/data:/var/lib/mysql
    env_file: ./config/default.env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 1s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq.srv
    hostname: rabbitmq.srv
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_PID_FILE=/var/lib/rabbitmq/mnesia/rabbitmq
    #command: >
    #  bash -c "/scripts/init.sh && echo 'hello'"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq # data mapping -> host: container
    #- ./rabbitmq/init.sh:/scripts/init.sh
    #- ./rabbitmq/init_check.sh:/scripts/init_check.sh
